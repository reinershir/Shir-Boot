package io.github.reinershir.boot.model;

import java.util.Date;

import com.baomidou.mybatisplus.annotation.IdType;
import com.baomidou.mybatisplus.annotation.TableField;
import com.baomidou.mybatisplus.annotation.TableId;
import com.baomidou.mybatisplus.annotation.TableLogic;
import com.baomidou.mybatisplus.annotation.TableName;

import io.github.reinershir.boot.common.ValidateGroups;
import io.swagger.v3.oas.annotations.media.Schema;
import jakarta.validation.constraints.NotBlank;
import jakarta.validation.constraints.NotNull;
import jakarta.validation.constraints.Size;
import lombok.Data;
/**
 * User Model, generated by CodeGenerator
 * @author ReinerShir
 * @version 1.0
 **/
@Data
@TableName("USER")
public class User{

	/**
	 * 
	 */
	@TableId(type = IdType.AUTO)
	@NotNull(message = "ID不能为空！",groups = ValidateGroups.UpdateGroup.class)
	@Schema(description = "用户ID,修改用户信息时不能为空",example = "3",nullable = true)
	private Long id;
	
	/**
	 * 登陆名
	 */
	@Schema(description = "用户登陆名",  required = true, example = "zhangsan")
	@NotBlank(message = "登陆名不能为空！",groups = ValidateGroups.AddGroup.class)
	private String loginName;
	
	/**
	 * 密码
	 */
	@Schema(description = "登陆密码(前端需要MD5加密再传输,修改信息时无需传此字段)",  required = true, example = "zhangsan123")
	@NotBlank(message = "密码不能为空！",groups = ValidateGroups.AddGroup.class)
	@Size(max = 32,min = 6,message = "密码长度最大32位，最小6位！",groups = ValidateGroups.AddGroup.class)
	private String password;
	
	/**
	 * 用户名称
	 */
	@Schema(description = "用户名称",  required = true, example = "李四")
	@NotBlank(message = "用户名称不能为空！")
	private String nickName;
	
	/**
	 * 邮箱
	 */
	@Schema(description = "邮箱",  required = false, example = "zhangsan@mail.com")
	private String email;
	
	/**
	 * 电话号码
	 */
	@Schema(description = "电话",  required = false, example = "110")
	private String phoneNumber;
	
	@Schema(hidden = true)
	private Integer status;
	
	/**
	 * 创建时间
	 */
	@Schema(hidden = true)
	private Date createDate;
	
	@Schema(description = "Profile",  required = false, example = "https://reiner.host/img/head.jpg")
	private String profile;
	
	/**
	 * 
	 */
	@Schema(hidden = true)
	private Date updateDate;
	
	/**
	 * 其它说明 
	 */
	@Schema(description = "电话",  required = false, example = "其它说明")
	private String remark;
	
	/**
	 * @Title: 逻辑删除标识
	 * @Description:   
	 * @author ReinerShir
	 * @return
	 */
	@TableLogic
	@TableField("IS_DELETE")
	@Schema(hidden = true)
	private Integer isDelete;
	

}
