spring:
  datasource:
    type: com.alibaba.druid.pool.DruidDataSource
    driverClassName: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://172.18.0.4:3306/shir-boot?allowMultiQueries=true&serverTimezone=GMT%2B8&useUnicode=true&characterEncoding=UTF-8&zeroDateTimeBehavior=convertToNull&useSSL=false&allowPublicKeyRetrieval=true
    username: root
    # &allowPublicKeyRetrieval=true
    password: Xh123456
    # 下面为连接池的补充设置，应用到上面所有数据源中
    # 初始化大小，最小，最大
    initialSize: 5
    minIdle: 5
    maxActive: 20
    # 配置获取连接等待超时的时间
    maxWait: 60000
    # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
    timeBetweenEvictionRunsMillis: 60000
    # 配置一个连接在池中最小生存的时间，单位是毫秒
    minEvictableIdleTimeMillis: 300000
    validationQuery: SELECT 1 FROM DUAL
    testWhileIdle: true
    testOnBorrow: false
    testOnReturn: false
    # 打开PSCache，并且指定每个连接上PSCache的大小
    poolPreparedStatements: true
    maxPoolPreparedStatementPerConnectionSize: 20
    # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
    filters: stat,wall,logback
    # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
    connectionProperties:
    stat:
      mergeSql: true
      slowSqlMillis: 5000
      # 合并多个DruidDataSource的监控数据
    #useGlobalDataSourceStat: true

  data:
    redis:
      database: 0
      host: 172.18.0.2
      port: 6379
      password: 123456
      # 连接超时时间（毫秒）
      timeout: 3000
      pool:
        # 连接池最大连接数（使用负值表示没有限制）
        max-active: 32
        # 连接池中的最大空闲连接
        max-idle: 8
        # 连接池中的最小空闲连接
        min-idle: 4

logging:
  #  level:
  #    root: INFO
  #  org:
  #    springframework:
  #      web: DEBUG
  file:
    name: ./logs/${spring.application.name}-log.log

springdoc:
  swagger-ui:
    path: /swagger-ui.html
    tags-sorter: alpha
    operations-sorter: alpha
  api-docs:
    path: /v3/api-docs
    enabled: false
  group-configs:
    - group: 'default'
      paths-to-match: '/**'
      packages-to-scan: io.github.reinershir
  default-flat-param-object: false

